/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MVC;


import java.awt.Color;
import java.awt.Font;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.Observable;
import java.util.Observer;

/**
 *
 * @author harry
 */
public class SatellitePanel extends javax.swing.JPanel implements Observer {



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        latitude = new javax.swing.JTextField();
        longitude = new javax.swing.JTextField();
        time = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        latitude.setEditable(false);
        add(latitude, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 176, 70));

        longitude.setEditable(false);
        add(longitude, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 88, 176, 70));

        time.setEditable(false);
        add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 191, 176, 41));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField latitude;
    private javax.swing.JTextField longitude;
    private javax.swing.JTextField time;
    // End of variables declaration//GEN-END:variables
    private final SatelliteModel model;
    
    public SatellitePanel(SatelliteController controller, SatelliteModel model){
        initComponents();
        this.model = model;
        model.addObserver(this);
    }
   

    @Override
    public void update(Observable o, Object arg) {
 
       if (model ==o){
           if (SatelliteModel.signal == true){                          // data available
                Font f = new Font("MS Reference San Serif",Font.BOLD,18);
                latitude.setText("Latitude: "+round(Math.abs(SatelliteModel.latitude),4)+" , "+SatelliteModel.dOLatitude);          
                latitude.setFont(f);
                latitude.setForeground(Color.green);
                longitude.setText("Longitude: "+round(Math.abs(SatelliteModel.longitude),4)+" , "+SatelliteModel.dOLongitude);
                longitude.setForeground(Color.green);
                longitude.setFont(f);
                time.setText(SatelliteModel.time);
           }
           else{                                            // no signal
                latitude.setText("      No signal!");
                latitude.setForeground(Color.red);
                longitude.setText("      No signal!"); 
                longitude.setForeground(Color.red);
                time.setText("");
           }
       }
    }
    /* Round a value to certain decimal places */
    private double round(double value, int places) {
        if (places < 0) throw new IllegalArgumentException();
        
        BigDecimal bd = new BigDecimal(value);
        bd = bd.setScale(places, RoundingMode.HALF_UP);
    return bd.doubleValue();
    }
}
