/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MVC;


import java.awt.Color;
import java.awt.Font;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.Observable;


/**
 *
 * @author harry
 */
public class SatellitePanel extends javax.swing.JPanel {

    public SatellitePanel(){ initComponents();}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        latitude = new javax.swing.JTextField();
        longitude = new javax.swing.JTextField();
        time = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        latitude.setEditable(false);
        latitude.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        add(latitude, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, 100));

        longitude.setEditable(false);
        longitude.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        add(longitude, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 220, 100));

        time.setEditable(false);
        time.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 220, 40));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField latitude;
    private javax.swing.JTextField longitude;
    private javax.swing.JTextField time;
    // End of variables declaration//GEN-END:variables

    Font f = new Font("MS Reference San Serif",Font.BOLD,18);
    
    /**
     *
     * @param signal signal
     * @param latitude latitude
     * @param dOLatitude direction of latitude
     * @param longitude longitude
     * @param dOLongitude direction of longitude
     * @param time   time
     */
    public void showPosition(boolean signal,double latitude,char dOLatitude,double longitude,
            char dOLongitude, String time){
        if( signal == true ){
            this.latitude.setText("Latitude: "+round(Math.abs(latitude),4)+" , "+dOLatitude);
            this.longitude.setText("Longitude: "+round(Math.abs(longitude),4)+" , "+dOLongitude);
            this.latitude.setFont(f);
            this.longitude.setFont(f);
            this.latitude.setForeground(Color.green);
            this.longitude.setForeground(Color.green);
            this.time.setText(time);                 
        }
        else{
            this.latitude.setText("       No signal!");
            this.longitude.setText("       No signal!");
            this.time.setText("Last signal at: "+this.time.getText());
            this.latitude.setForeground(Color.red);
            this.longitude.setForeground(Color.red);
        }
    }
    
    /**
     * @ helper function : Round a value to certain decimal places 
     */
    private double round(double value, int places) {
        if (places < 0) throw new IllegalArgumentException();
        
        BigDecimal bd = new BigDecimal(value);
        bd = bd.setScale(places, RoundingMode.HALF_UP);
    return bd.doubleValue();
    }

   
}
